initSidebarItems({"enum":[["DeathReason","Reason why the heart stopped beating"],["HeartInteraction","Action to a hearth"],["ModuleTerminationReason","Reason why a module has terminated"]],"struct":[["DummyResourceHandleProvider","Stub resource handle provider"],["Heart","Lifecycle management struct that can be used to keep the application alive"],["HeartStone","Remote controller for the heart"],["ModuleRunner","Runner for [`Module`] implementations"],["MonitoredPubSub","Redis PubSub connection monitoring the connection state"],["MonitoredRedisFactory","[`RedisFactory`] implementation providing [`jatsl`] interop"],["RedisCommunicationFactory","Communication factory based on [`MonitoredRedisFactory`]"],["RedisResource","Redis connection that monitors for connection errors"],["RedisServiceAdvertisementJob","Job which advertises a given service using the redis [`ServiceAdvertiser`] implementation"],["RedisServiceDiscoveryJob","Job which runs a [`PubSubServiceDiscovererDaemon`] on a [`RedisPubSubBackend`]"],["ServiceRunner","Runner for [`Service`] implementations where [`Service::Instance`] is conforming to the [`ConsumerExt`] trait"]],"trait":[["Module","Executable module"],["ResourceHandleProvider","Factory to provide [`TaskResourceHandle`] instances"],["Service","Structure which can be instantiated with a [`CommunicationFactory`]"]],"type":[["BoxedResourceHandleProvider","Dynamic dispatch version of [`ResourceHandleProvider`]"]]});
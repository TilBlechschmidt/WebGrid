# Default values for web-grid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

logLevel: debug,hyper=warn,warp=warn
maxSessionsPerOrchestrator: 5

recording:
  # Whether or not to create PVCs and a storage service
  enabled: false
  sizeLimit: 50G
  # Consult the ffmpeg documentation on how these parameters work
  # https://trac.ffmpeg.org/wiki/Encode/H.264
  quality:
    crf: 46
    maxBitrate: 450000
  persistentVolumeClaim:
    create: true
    # The name of the volume claim to use.
    # If not set and createVolumeClaim is true, a name is generated using the fullname template
    name: ""
    # A backing PersistentVolume has to exist and implicitly defines
    # the node-affinity for sessions and storage pods if recording is enabled.
    #
    # Note: The storage class needs to support concurrent access by multiple pods! (e.g. a hostPath based PV)
    storageClassName: local-storage

replicaCount:
  proxy: 1
  manager: 1
  orchestrator: 1
  metrics: 1
  api: 1

image:
  repository: webgrid
  # Defaults to Chart.AppVersion if not set
  tag: ""
  pullPolicy: Always

serviceAccount:
  # Specifies whether a service account with RBAC should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

storageClassName:
  redis: emptyDir

resources:
  redis: {}
  proxy: {}
  manager: {}
  metrics: {}
  orchestrator: {}
  storage: {}
  api: {}
  session:
    limits:
      memory: 3000Mi
    requests:
      cpu: '1'
      memory: 3000Mi

nodeSelector:
  redis: {}
  proxy: {}
  manager: {}
  metrics: {}
  orchestrator: {}
  session: {}
  storage: {}
  api: {}

tolerations:
  redis: []
  proxy: []
  manager: []
  metrics: []
  orchestrator: []
  session: []
  storage: []
  api: []

affinity:
  redis: {}
  proxy: {}
  manager: {}
  metrics: {}
  orchestrator: {}
  session: {}
  storage: {}
  api: {}

service:
  type: ClusterIP
  port: 80

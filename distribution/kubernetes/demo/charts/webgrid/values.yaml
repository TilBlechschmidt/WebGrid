# Default values for web-grid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

logLevel: info,hyper=warn,warp=warn,sqlx=warn,tower=warn,h2=warn

service:
  type: ClusterIP
  port: 80
  name: ""

config:
  # When set, sessions will be provided with this backend enabling video recording.
  # Currently, only S3 compatible storage backends are supported. The URL encapsulates all parameters needed to
  # connect to the backend. It follows the following pattern where values in brackets are optional:
  #   s3+http[s]://key:secret@endpoint/bucket[?pathStyle]
  storageBackend:
  redis:
    # If you have your own Redis instance somewhere, you can point to it here.
    # When left empty, the chart will deploy its own one and use it.
    customEndpoint:
    # Storage class to use for persisting data when customEndpoint is not set
    storageClassName: emptyDir
  mongo:
    # If you have your own MongoDB instance somewhere, you can point to it here.
    # When left empty, the chart will deploy its own one and use it.
    customEndpoint:
    # Storage class to use for persisting data when customEndpoint is not set
    storageClassName: emptyDir
    storageSize: 16G
  manager:
    requiredMetadata: ""
  gangway:
    # Maximum number of cached service endpoints
    cacheSize: 1000
    # Maximum number of concurrent, pending session creation requests.
    # When more requests arrive, the oldest ones will be terminated.
    # In reality, this variable is only here to cap the memory usage and not to actively control the requests.
    # When you are hitting this limit you should probably start scaling horizontally instead.
    pendingRequestLimit: 25000
    # Maximum amount of time for queued session requests to be processed before the gangway shuts down.
    # You should set this to a rather high value so that all pending requests can still be completed while
    # new ones are delegated to another replica instance. Note that the K8s terminationGracePeriod is set to
    # this value plus 20sec and the gangway is instructed to terminate within the set time period.
    terminationGracePeriod: 600
  collector:
    # Name of the mongo database to use
    database: webgrid
    # Capped collection to use for "permanent" storage
    collection: sessions
    # Byte limit for the collection (quoted because Helm likes its scientific notation ...)
    sizeLimit: "17179869184"
    # Settings for an intermediary "staging" collection
    # Since documents in capped collections are immutable, sessions are stored here temporarily
    staging:
      # Name of the collection
      collection: sessionsStaging
      # TTL for documents in the collection
      # This ensures that "orphaned" metadata gets cleaned up eventually. This can happen when
      # a session dies without sending a termination notification (e.g. during server failure)
      ttl: 3600
  orchestrator:
    # Number of concurrent sessions allowed *per* orchestrator replica
    permits: 5
  node:
    # Maximum duration (in seconds) the webdriver may take until it reports a ready state.
    startupTimeout: 120
    # Idle timeout (in seconds) which is in effect until the first client request is received.
    # This allows the session to terminate early if the client no longer has any interest in the session
    # or it itself ran into a local timeout (e.g. due to prolonged queueing).
    # After the first request from a client has been received, the regular idle-timeout is taking effect.
    initialTimeout: 30
    # If no WebDriver client request is received within the specified period (in seconds), the node will terminate.
    # Each incoming request resets the countdown.
    idleTimeout: 120
    # Screen resolution for sessions
    resolution: 1920x1080
    # Options related to video recording
    # Consult the ffmpeg documentation on how these parameters work
    # https://trac.ffmpeg.org/wiki/Encode/H.264
    recording:
      crf: 46
      maxBitrate: 450000
      framerate: 5
      segmentDuration: 6

replicaCount:
  api: 1
  gangway: 1
  manager: 1
  collector: 1
  orchestrator: 1

image:
  repository: webgrid
  # Defaults to Chart.AppVersion if not set
  tag: ""
  pullPolicy: Always
  pullSecret: ""

serviceAccount:
  # Specifies whether a service account with RBAC should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

resources:
  api: {}
  redis: {}
  mongo: {}
  gangway: {}
  manager: {}
  collector: {}
  orchestrator: {}
  node:
    limits:
      memory: 8000Mi
    requests:
      cpu: "1"
      memory: 4000Mi

nodeSelector:
  api: {}
  redis: {}
  mongo: {}
  gangway: {}
  manager: {}
  collector: {}
  orchestrator: {}
  node: {}

tolerations:
  api: []
  redis: []
  mongo: []
  gangway: []
  manager: []
  collector: []
  orchestrator: []
  node: []

affinity:
  api: {}
  redis: {}
  mongo: {}
  gangway: {}
  manager: {}
  collector: {}
  orchestrator: {}
  node: {}

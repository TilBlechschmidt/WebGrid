name: üöÄ Project release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-core:
    name: üî® Build Core component
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: core/.cache
          key: build-core-${{ runner.os }}-lockfile=${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: make build-core

      - name: Change cache permission
        run: sudo chmod -R 777 core/.cache

      - uses: actions/upload-artifact@v2
        with:
          name: core-executable
          path: .artifacts/core-executable/webgrid

      - uses: actions/upload-artifact@v2
        with:
          name: core-documentation
          path: .artifacts/core-documentation

  build-api:
    name: üî® Build API component
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - run: make build-api

      - uses: actions/upload-artifact@v2
        with:
          name: api-executable
          path: .artifacts/api-executable/index.js

  publish-api:
    name: üê≥ Publish API to Docker Hub
    runs-on: ubuntu-latest
    needs: build-api
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: api-executable
          path: .artifacts/api-executable

      - name: Build and push webgrid/api Docker image
        uses: docker/build-push-action@v1
        with:
          dockerfile: distribution/docker/images/api/Dockerfile
          username: webgrid
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: webgrid/api
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

  publish-core:
    name: üê≥ Publish Core to Docker Hub
    runs-on: ubuntu-latest
    needs: build-core
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: core-executable
          path: .artifacts/core-executable

      - name: Build and push webgrid/core Docker image
        uses: docker/build-push-action@v1
        with:
          dockerfile: distribution/docker/images/core/Dockerfile
          username: webgrid
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: webgrid/core
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

  publish-node:
    name: üê≥ Publish Node to Docker Hub
    runs-on: ubuntu-latest
    needs: build-core
    strategy:
      matrix:
        browser: ["chrome", "firefox"]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: core-executable
          path: .artifacts/core-executable

      - name: Build and push webgrid/node-${{ matrix.browser }} Docker image
        uses: docker/build-push-action@v1
        with:
          dockerfile: distribution/docker/images/node/Dockerfile
          build_args: browser=${{ matrix.browser }}
          username: webgrid
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: webgrid/node-${{ matrix.browser }}
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

  publish-docs:
    name: üìö Publish Docs to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-core
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v2
        with:
          name: core-documentation
          path: .artifacts/core-documentation

      - uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install mkdocs theme & plugins
        run: |
          pip3 install --no-cache \
            'mkdocs-git-revision-date-localized-plugin>=0.4' \
            'mkdocs-material' \
            'mkdocs-mermaid2-plugin' \
            'mkdocs-codeinclude-plugin' \
            'mkdocs-material-extensions' \
            'mkdocs-simple-hooks' \
            'git+http://github.com/TilBlechschmidt/mkdocs-helm'

      - name: Build & deploy documentation
        env:
          HELM_USE_GIT_TAG: true
        run: |
          mkdocs --version
          mkdocs gh-deploy --force

  github-release:
    name: üêô Create GitHub Release
    needs: [build-core, build-api]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if tag is pre-release
        run: '[[ ${GITHUB_REF:10} == *"-"* ]] && echo "::set-env name=PRE_RELEASE::true" || echo "::set-env name=PRE_RELEASE::false"'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ env.PRE_RELEASE }}

      - uses: actions/download-artifact@v2
        with:
          name: core-executable
          path: .artifacts/core-executable

      - uses: actions/download-artifact@v2
        with:
          name: api-executable
          path: .artifacts/api-executable

      - name: Attach Core executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .artifacts/core-executable/webgrid
          asset_name: webgrid-core-linux
          asset_content_type: application/octet-stream

      - name: Attach API executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .artifacts/api-executable/index.js
          asset_name: webgrid-api.js
          asset_content_type: application/javascript
